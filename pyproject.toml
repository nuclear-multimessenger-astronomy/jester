[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = ["jesterTOV/*"]

[project]
name = "jesterTOV"
authors = [
  {name = "Peter T. H. Pang", email = "tsunhopang@gmail.com"},
  {name = "Thibeau Wouters", email = "thibeauwouters@gmail.com"}
]
version = "0.0.1"
description = "Jax-based EOS and TOV solver"
readme = "README.md"
requires-python = ">=3.9, <3.13"
license = {file = "LICENSE"}
urls = {repository = "https://github.com/nuclear-multimessenger-astronomy/jester"}
dependencies = ["jax>=0.4.23", "jaxtyping>=0.2.24", "typing_extensions>=4.5.0", "diffrax>=0.5.0", "interpax"]

classifiers = [
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Intended Audience :: Science/Research',
    'Intended Audience :: End Users/Desktop',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Astronomy',
    'Topic :: Scientific/Engineering :: Physics',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]

[project.optional-dependencies]
test = ["pytest>=7.0", "pytest-cov>=4.0", "pytest-xdist>=3.0", "hypothesis>=6.0"]
dev = ["pytest>=7.0", "pytest-cov>=4.0", "pytest-xdist>=3.0", "hypothesis>=6.0", "pre-commit"]

[tool.ruff]
ignore = ["F722"]

[tool.ruff.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
lines-after-imports = 2
order-by-type = false

[tool.pyright]
reportIncompatibleMethodOverride = true
include = ["jesterTOV"]

# pyproject.toml
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.coverage.run]
source = ["jesterTOV"]
omit = ["*/tests/*", "*/examples/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
